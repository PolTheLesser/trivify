apiVersion: v1
kind: Namespace
metadata:
  name: trivify
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata
  namespace: trivify
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivify-db
  namespace: trivify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trivify-db
  template:
    metadata:
      labels:
        app: trivify-db
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRES_DB
              value: "quizapp"
            - name: POSTGRES_USER
              value: "quizuser"
            - name: POSTGRES_PASSWORD
              value: "quizpass"
            - name: PGTZ
              value: "Europe/Berlin"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "quizuser", "-d", "quizapp"]
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: trivify-db
  namespace: trivify
spec:
  selector:
    app: trivify-db
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivify-backend
  namespace: trivify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trivify-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: trivify-backend
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z trivify-db 5432; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
      containers:
        - name: backend
          image: lesommer2019/trivify-backend:stable
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
          env:
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-Duser.timezone=Europe/Berlin"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://trivify-db:5432/quizapp"
            - name: SPRING_DATASOURCE_USERNAME
              value: "quizuser"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "quizpass"
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: "update"
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: "org.hibernate.dialect.PostgreSQLDialect"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 9090
            initialDelaySeconds: 20
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: trivify-backend
  namespace: trivify
spec:
  selector:
    app: trivify-backend
  type: LoadBalancer
  ports:
    - port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trivify-frontend
  namespace: trivify
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trivify-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: trivify-frontend
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:latest
          command:
            - sh
            - -c
            - |
              until pg_isready -h trivify-db -p 5432 -U quizuser; do
                echo "Waiting for PostgreSQL to become ready..."
                sleep 2
              done
          env:
            - name: PGPASSWORD
              value: "quizpass"
      containers:
        - name: frontend
          image: lesommer2019/trivify-frontend:stable
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: TZ
              value: "Europe/Berlin"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: trivify-frontend
  namespace: trivify
spec:
  selector:
    app: trivify-frontend
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: trivify-rolling-restart
  namespace: trivify
spec:
  schedule: "0 2 * * *"  # every day at 02:00 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: restart-deployments
              image: bitnami/kubectl:latest
              command:
                - /bin/sh
                - -c
                - |
                  kubectl rollout restart deployment/trivify-backend -n trivify
                  kubectl rollout restart deployment/trivify-frontend -n trivify
                  kubectl rollout restart deployment/trivify-db -n trivify
          restartPolicy: OnFailure
---
# ClusterIssuer für Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: support@trivify.de
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx
---
# Ingress für HTTPS und automatische TLS-Zertifikate
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trivify-ingress
  namespace: trivify
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - trivify.de
        - www.trivify.de
      secretName: trivify-tls
  rules:
    - host: trivify.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trivify-frontend
                port:
                  number: 80
    - host: www.trivify.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trivify-frontend
                port:
                  number: 80
