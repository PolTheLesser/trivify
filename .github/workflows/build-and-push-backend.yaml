name: Build & Push Backend Image

on:
  push:
    branches:
      - '**'

jobs:
  backend-build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Variables (BRANCH, SHA, TAG)
        id: vars
        run: |
          BRANCH=$(echo "${GITHUB_REF##*/}" | sed 's/\//-/g')
          SHA=$(git rev-parse --short HEAD)
          if [ "$BRANCH" = "main" ]; then
            TAG=latest
          elif [ "$BRANCH" = "hosting" ]; then
            TAG=dev
          elif [ "$BRANCH" = "dev" ]; then
            TAG=beta
          else
            TAG=dev-${BRANCH}-${SHA}
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Replace placeholders in application.yml
        run: |
          envsubst < backend/src/main/resources/application-template.yml > backend/src/main/resources/application.yml
        env:
          DB_URL: ${{ vars.DB_URL }}
          SERVER_URL: ${{ vars.SERVER_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          MAIL_ANSWER_TO: ${{ secrets.MAIL_ANSWER_TO }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USER: ${{ secrets.MAIL_USER }}
          MAIL_PASS: ${{ secrets.MAIL_PASS }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          AI_URL: ${{ vars.AI_URL }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Set Execution Permissions for Maven Wrapper
        run: chmod +x ./backend/mvnw

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend
        run: |
          ./backend/mvnw -f ./backend/pom.xml clean verify -Dnvd.api.key=${{ secrets.NVD_API_KEY }}
          docker build -t lesommer2019/trivify-backend:${{ steps.vars.outputs.tag }} ./backend
          docker push lesommer2019/trivify-backend:${{ steps.vars.outputs.tag }}